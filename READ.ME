Comandos para iniciar el proyecto:

1. Crear entorno virtual:
   python3 -m venv venv
   source venv/bin/activate

2. Instalar dependencias:
   pip install -r requirements.txt

3. Iniciar el servidor:
   python3 main.py

4. Iniciar el servidor con docker:
   docker compose up

5. Iniciar el servidor con docker en background:
   docker compose up -d

6. Detener el servidor con docker:
   docker compose down


Ejemplo manejo de docker

# 1. Voy a mi proyecto
cd ~/proyectos/mi_api_python

# 2. Me aseguro de que Docker esté corriendo
sudo systemctl start docker

# 3. Levanto los servicios (API, DB, etc.) en segundo plano
docker compose up -d

# ... (trabajo en mi código) ...

# 4. Hice un cambio en el Dockerfile, necesito reconstruir
docker compose up -d --build

# 5. Algo falla, quiero ver los logs de mi API
docker compose logs -f api

# 6. Terminé por hoy, apago todo
docker compose down


#Swagger
http://localhost:8000

#Documentacion
-Asi se accede a la base de datos de mongo:
docker exec -it mongo mongosh

-Asi se crea un usuario admionistrador en mongo:
docker exec -it mongo mongosh
use admin
db.createUser({
  user: "admin", // <-- Cambia esto por tu nombre de usuario deseado
  pwd: "wilsonymilo12", // <-- Cambia esto por una contraseña fuerte
  roles: [
    { role: "root", db: "admin" }
  ]
})



#Volviendo a swagger ¿Como creo un usario administrador?
Excelente pregunta! Es un paso crucial.

Revisando tu código, veo que el endpoint de registro (/auth/register) crea a todos los usuarios nuevos automáticamente con el rol de CUSTOMER (cliente), como se ve en tu archivo routers/auth.py.

Por lo tanto, no puedes crear un administrador directamente desde la API. La forma más sencilla es crear un usuario normal y luego promoverlo a administrador manualmente desde la base de datos.

Aquí tienes los pasos:

Paso 1: Registra tu usuario administrador
Si aún no lo has hecho, registra tu usuario (el que quieres que sea admin) a través de la interfaz de Swagger:

Ve al endpoint POST /auth/register.

Haz clic en "Try it out".

Ingresa los datos del usuario (ej. admin@ejemplo.com, admin, una contraseña, y una fecha de nacimiento válida).
{
  "username": "dybalux",
  "email": "luchicapo@gmail.com",
  "password": "wilsonymilo12",
  "birth_date": "2000-03-23T05:07:34.549Z"
}
Ejecútalo.
Paso 2: Conéctate al Shell de MongoDB
Ahora, vamos a "entrar" a la base de datos de Docker para cambiar el rol de ese usuario.

Abre tu terminal en la carpeta del proyecto.

docker exec -it mongo mongosh

// Dentro de mongosh
use bebidas_db

db.users.updateOne(
  { "email": "luchicapo@gmail.com" },
  { $set: { "role": "admin" } }
)

// Sal de mongosh
exit


